// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: offline_wire_formats.proto

package connections

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OfflineFrame_Version int32

const (
	OfflineFrame_UNKNOWN_VERSION OfflineFrame_Version = 0
	OfflineFrame_V1              OfflineFrame_Version = 1
)

// Enum value maps for OfflineFrame_Version.
var (
	OfflineFrame_Version_name = map[int32]string{
		0: "UNKNOWN_VERSION",
		1: "V1",
	}
	OfflineFrame_Version_value = map[string]int32{
		"UNKNOWN_VERSION": 0,
		"V1":              1,
	}
)

func (x OfflineFrame_Version) Enum() *OfflineFrame_Version {
	p := new(OfflineFrame_Version)
	*p = x
	return p
}

func (x OfflineFrame_Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OfflineFrame_Version) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[0].Descriptor()
}

func (OfflineFrame_Version) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[0]
}

func (x OfflineFrame_Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OfflineFrame_Version) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OfflineFrame_Version(num)
	return nil
}

// Deprecated: Use OfflineFrame_Version.Descriptor instead.
func (OfflineFrame_Version) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{0, 0}
}

type V1Frame_FrameType int32

const (
	V1Frame_UNKNOWN_FRAME_TYPE            V1Frame_FrameType = 0
	V1Frame_CONNECTION_REQUEST            V1Frame_FrameType = 1
	V1Frame_CONNECTION_RESPONSE           V1Frame_FrameType = 2
	V1Frame_PAYLOAD_TRANSFER              V1Frame_FrameType = 3
	V1Frame_BANDWIDTH_UPGRADE_NEGOTIATION V1Frame_FrameType = 4
	V1Frame_KEEP_ALIVE                    V1Frame_FrameType = 5
	V1Frame_DISCONNECTION                 V1Frame_FrameType = 6
	V1Frame_PAIRED_KEY_ENCRYPTION         V1Frame_FrameType = 7
)

// Enum value maps for V1Frame_FrameType.
var (
	V1Frame_FrameType_name = map[int32]string{
		0: "UNKNOWN_FRAME_TYPE",
		1: "CONNECTION_REQUEST",
		2: "CONNECTION_RESPONSE",
		3: "PAYLOAD_TRANSFER",
		4: "BANDWIDTH_UPGRADE_NEGOTIATION",
		5: "KEEP_ALIVE",
		6: "DISCONNECTION",
		7: "PAIRED_KEY_ENCRYPTION",
	}
	V1Frame_FrameType_value = map[string]int32{
		"UNKNOWN_FRAME_TYPE":            0,
		"CONNECTION_REQUEST":            1,
		"CONNECTION_RESPONSE":           2,
		"PAYLOAD_TRANSFER":              3,
		"BANDWIDTH_UPGRADE_NEGOTIATION": 4,
		"KEEP_ALIVE":                    5,
		"DISCONNECTION":                 6,
		"PAIRED_KEY_ENCRYPTION":         7,
	}
)

func (x V1Frame_FrameType) Enum() *V1Frame_FrameType {
	p := new(V1Frame_FrameType)
	*p = x
	return p
}

func (x V1Frame_FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (V1Frame_FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[1].Descriptor()
}

func (V1Frame_FrameType) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[1]
}

func (x V1Frame_FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *V1Frame_FrameType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = V1Frame_FrameType(num)
	return nil
}

// Deprecated: Use V1Frame_FrameType.Descriptor instead.
func (V1Frame_FrameType) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{1, 0}
}

// Should always match cs/symbol:location.nearby.proto.connections.Medium
// LINT.IfChange
type ConnectionRequestFrame_Medium int32

const (
	ConnectionRequestFrame_UNKNOWN_MEDIUM ConnectionRequestFrame_Medium = 0
	// Deprecated: Marked as deprecated in offline_wire_formats.proto.
	ConnectionRequestFrame_MDNS         ConnectionRequestFrame_Medium = 1
	ConnectionRequestFrame_BLUETOOTH    ConnectionRequestFrame_Medium = 2
	ConnectionRequestFrame_WIFI_HOTSPOT ConnectionRequestFrame_Medium = 3
	ConnectionRequestFrame_BLE          ConnectionRequestFrame_Medium = 4
	ConnectionRequestFrame_WIFI_LAN     ConnectionRequestFrame_Medium = 5
	ConnectionRequestFrame_WIFI_AWARE   ConnectionRequestFrame_Medium = 6
	ConnectionRequestFrame_NFC          ConnectionRequestFrame_Medium = 7
	ConnectionRequestFrame_WIFI_DIRECT  ConnectionRequestFrame_Medium = 8
	ConnectionRequestFrame_WEB_RTC      ConnectionRequestFrame_Medium = 9
	ConnectionRequestFrame_BLE_L2CAP    ConnectionRequestFrame_Medium = 10
	ConnectionRequestFrame_USB          ConnectionRequestFrame_Medium = 11
)

// Enum value maps for ConnectionRequestFrame_Medium.
var (
	ConnectionRequestFrame_Medium_name = map[int32]string{
		0:  "UNKNOWN_MEDIUM",
		1:  "MDNS",
		2:  "BLUETOOTH",
		3:  "WIFI_HOTSPOT",
		4:  "BLE",
		5:  "WIFI_LAN",
		6:  "WIFI_AWARE",
		7:  "NFC",
		8:  "WIFI_DIRECT",
		9:  "WEB_RTC",
		10: "BLE_L2CAP",
		11: "USB",
	}
	ConnectionRequestFrame_Medium_value = map[string]int32{
		"UNKNOWN_MEDIUM": 0,
		"MDNS":           1,
		"BLUETOOTH":      2,
		"WIFI_HOTSPOT":   3,
		"BLE":            4,
		"WIFI_LAN":       5,
		"WIFI_AWARE":     6,
		"NFC":            7,
		"WIFI_DIRECT":    8,
		"WEB_RTC":        9,
		"BLE_L2CAP":      10,
		"USB":            11,
	}
)

func (x ConnectionRequestFrame_Medium) Enum() *ConnectionRequestFrame_Medium {
	p := new(ConnectionRequestFrame_Medium)
	*p = x
	return p
}

func (x ConnectionRequestFrame_Medium) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionRequestFrame_Medium) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[2].Descriptor()
}

func (ConnectionRequestFrame_Medium) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[2]
}

func (x ConnectionRequestFrame_Medium) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ConnectionRequestFrame_Medium) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ConnectionRequestFrame_Medium(num)
	return nil
}

// Deprecated: Use ConnectionRequestFrame_Medium.Descriptor instead.
func (ConnectionRequestFrame_Medium) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{2, 0}
}

// Used to replace the status integer parameter with a meaningful enum item.
// Map ConnectionsStatusCodes.STATUS_OK to ACCEPT and
// ConnectionsStatusCodes.STATUS_CONNECTION_REJECTED to REJECT.
// Flag: connection_replace_status_with_response_connectionResponseFrame
type ConnectionResponseFrame_ResponseStatus int32

const (
	ConnectionResponseFrame_UNKNOWN_RESPONSE_STATUS ConnectionResponseFrame_ResponseStatus = 0
	ConnectionResponseFrame_ACCEPT                  ConnectionResponseFrame_ResponseStatus = 1
	ConnectionResponseFrame_REJECT                  ConnectionResponseFrame_ResponseStatus = 2
)

// Enum value maps for ConnectionResponseFrame_ResponseStatus.
var (
	ConnectionResponseFrame_ResponseStatus_name = map[int32]string{
		0: "UNKNOWN_RESPONSE_STATUS",
		1: "ACCEPT",
		2: "REJECT",
	}
	ConnectionResponseFrame_ResponseStatus_value = map[string]int32{
		"UNKNOWN_RESPONSE_STATUS": 0,
		"ACCEPT":                  1,
		"REJECT":                  2,
	}
)

func (x ConnectionResponseFrame_ResponseStatus) Enum() *ConnectionResponseFrame_ResponseStatus {
	p := new(ConnectionResponseFrame_ResponseStatus)
	*p = x
	return p
}

func (x ConnectionResponseFrame_ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionResponseFrame_ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[3].Descriptor()
}

func (ConnectionResponseFrame_ResponseStatus) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[3]
}

func (x ConnectionResponseFrame_ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ConnectionResponseFrame_ResponseStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ConnectionResponseFrame_ResponseStatus(num)
	return nil
}

// Deprecated: Use ConnectionResponseFrame_ResponseStatus.Descriptor instead.
func (ConnectionResponseFrame_ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{3, 0}
}

type PayloadTransferFrame_PacketType int32

const (
	PayloadTransferFrame_UNKNOWN_PACKET_TYPE PayloadTransferFrame_PacketType = 0
	PayloadTransferFrame_DATA                PayloadTransferFrame_PacketType = 1
	PayloadTransferFrame_CONTROL             PayloadTransferFrame_PacketType = 2
)

// Enum value maps for PayloadTransferFrame_PacketType.
var (
	PayloadTransferFrame_PacketType_name = map[int32]string{
		0: "UNKNOWN_PACKET_TYPE",
		1: "DATA",
		2: "CONTROL",
	}
	PayloadTransferFrame_PacketType_value = map[string]int32{
		"UNKNOWN_PACKET_TYPE": 0,
		"DATA":                1,
		"CONTROL":             2,
	}
)

func (x PayloadTransferFrame_PacketType) Enum() *PayloadTransferFrame_PacketType {
	p := new(PayloadTransferFrame_PacketType)
	*p = x
	return p
}

func (x PayloadTransferFrame_PacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadTransferFrame_PacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[4].Descriptor()
}

func (PayloadTransferFrame_PacketType) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[4]
}

func (x PayloadTransferFrame_PacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PayloadTransferFrame_PacketType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PayloadTransferFrame_PacketType(num)
	return nil
}

// Deprecated: Use PayloadTransferFrame_PacketType.Descriptor instead.
func (PayloadTransferFrame_PacketType) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4, 0}
}

type PayloadTransferFrame_PayloadHeader_PayloadType int32

const (
	PayloadTransferFrame_PayloadHeader_UNKNOWN_PAYLOAD_TYPE PayloadTransferFrame_PayloadHeader_PayloadType = 0
	PayloadTransferFrame_PayloadHeader_BYTES                PayloadTransferFrame_PayloadHeader_PayloadType = 1
	PayloadTransferFrame_PayloadHeader_FILE                 PayloadTransferFrame_PayloadHeader_PayloadType = 2
	PayloadTransferFrame_PayloadHeader_STREAM               PayloadTransferFrame_PayloadHeader_PayloadType = 3
)

// Enum value maps for PayloadTransferFrame_PayloadHeader_PayloadType.
var (
	PayloadTransferFrame_PayloadHeader_PayloadType_name = map[int32]string{
		0: "UNKNOWN_PAYLOAD_TYPE",
		1: "BYTES",
		2: "FILE",
		3: "STREAM",
	}
	PayloadTransferFrame_PayloadHeader_PayloadType_value = map[string]int32{
		"UNKNOWN_PAYLOAD_TYPE": 0,
		"BYTES":                1,
		"FILE":                 2,
		"STREAM":               3,
	}
)

func (x PayloadTransferFrame_PayloadHeader_PayloadType) Enum() *PayloadTransferFrame_PayloadHeader_PayloadType {
	p := new(PayloadTransferFrame_PayloadHeader_PayloadType)
	*p = x
	return p
}

func (x PayloadTransferFrame_PayloadHeader_PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadTransferFrame_PayloadHeader_PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[5].Descriptor()
}

func (PayloadTransferFrame_PayloadHeader_PayloadType) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[5]
}

func (x PayloadTransferFrame_PayloadHeader_PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PayloadTransferFrame_PayloadHeader_PayloadType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PayloadTransferFrame_PayloadHeader_PayloadType(num)
	return nil
}

// Deprecated: Use PayloadTransferFrame_PayloadHeader_PayloadType.Descriptor instead.
func (PayloadTransferFrame_PayloadHeader_PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4, 0, 0}
}

type PayloadTransferFrame_PayloadChunk_Flags int32

const (
	PayloadTransferFrame_PayloadChunk_LAST_CHUNK PayloadTransferFrame_PayloadChunk_Flags = 1
)

// Enum value maps for PayloadTransferFrame_PayloadChunk_Flags.
var (
	PayloadTransferFrame_PayloadChunk_Flags_name = map[int32]string{
		1: "LAST_CHUNK",
	}
	PayloadTransferFrame_PayloadChunk_Flags_value = map[string]int32{
		"LAST_CHUNK": 1,
	}
)

func (x PayloadTransferFrame_PayloadChunk_Flags) Enum() *PayloadTransferFrame_PayloadChunk_Flags {
	p := new(PayloadTransferFrame_PayloadChunk_Flags)
	*p = x
	return p
}

func (x PayloadTransferFrame_PayloadChunk_Flags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadTransferFrame_PayloadChunk_Flags) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[6].Descriptor()
}

func (PayloadTransferFrame_PayloadChunk_Flags) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[6]
}

func (x PayloadTransferFrame_PayloadChunk_Flags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PayloadTransferFrame_PayloadChunk_Flags) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PayloadTransferFrame_PayloadChunk_Flags(num)
	return nil
}

// Deprecated: Use PayloadTransferFrame_PayloadChunk_Flags.Descriptor instead.
func (PayloadTransferFrame_PayloadChunk_Flags) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4, 1, 0}
}

type PayloadTransferFrame_ControlMessage_EventType int32

const (
	PayloadTransferFrame_ControlMessage_UNKNOWN_EVENT_TYPE   PayloadTransferFrame_ControlMessage_EventType = 0
	PayloadTransferFrame_ControlMessage_PAYLOAD_ERROR        PayloadTransferFrame_ControlMessage_EventType = 1
	PayloadTransferFrame_ControlMessage_PAYLOAD_CANCELED     PayloadTransferFrame_ControlMessage_EventType = 2
	PayloadTransferFrame_ControlMessage_PAYLOAD_RECEIVED_ACK PayloadTransferFrame_ControlMessage_EventType = 3
)

// Enum value maps for PayloadTransferFrame_ControlMessage_EventType.
var (
	PayloadTransferFrame_ControlMessage_EventType_name = map[int32]string{
		0: "UNKNOWN_EVENT_TYPE",
		1: "PAYLOAD_ERROR",
		2: "PAYLOAD_CANCELED",
		3: "PAYLOAD_RECEIVED_ACK",
	}
	PayloadTransferFrame_ControlMessage_EventType_value = map[string]int32{
		"UNKNOWN_EVENT_TYPE":   0,
		"PAYLOAD_ERROR":        1,
		"PAYLOAD_CANCELED":     2,
		"PAYLOAD_RECEIVED_ACK": 3,
	}
)

func (x PayloadTransferFrame_ControlMessage_EventType) Enum() *PayloadTransferFrame_ControlMessage_EventType {
	p := new(PayloadTransferFrame_ControlMessage_EventType)
	*p = x
	return p
}

func (x PayloadTransferFrame_ControlMessage_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadTransferFrame_ControlMessage_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[7].Descriptor()
}

func (PayloadTransferFrame_ControlMessage_EventType) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[7]
}

func (x PayloadTransferFrame_ControlMessage_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PayloadTransferFrame_ControlMessage_EventType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PayloadTransferFrame_ControlMessage_EventType(num)
	return nil
}

// Deprecated: Use PayloadTransferFrame_ControlMessage_EventType.Descriptor instead.
func (PayloadTransferFrame_ControlMessage_EventType) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4, 2, 0}
}

type BandwidthUpgradeNegotiationFrame_EventType int32

const (
	BandwidthUpgradeNegotiationFrame_UNKNOWN_EVENT_TYPE          BandwidthUpgradeNegotiationFrame_EventType = 0
	BandwidthUpgradeNegotiationFrame_UPGRADE_PATH_AVAILABLE      BandwidthUpgradeNegotiationFrame_EventType = 1
	BandwidthUpgradeNegotiationFrame_LAST_WRITE_TO_PRIOR_CHANNEL BandwidthUpgradeNegotiationFrame_EventType = 2
	BandwidthUpgradeNegotiationFrame_SAFE_TO_CLOSE_PRIOR_CHANNEL BandwidthUpgradeNegotiationFrame_EventType = 3
	BandwidthUpgradeNegotiationFrame_CLIENT_INTRODUCTION         BandwidthUpgradeNegotiationFrame_EventType = 4
	BandwidthUpgradeNegotiationFrame_UPGRADE_FAILURE             BandwidthUpgradeNegotiationFrame_EventType = 5
	BandwidthUpgradeNegotiationFrame_CLIENT_INTRODUCTION_ACK     BandwidthUpgradeNegotiationFrame_EventType = 6
)

// Enum value maps for BandwidthUpgradeNegotiationFrame_EventType.
var (
	BandwidthUpgradeNegotiationFrame_EventType_name = map[int32]string{
		0: "UNKNOWN_EVENT_TYPE",
		1: "UPGRADE_PATH_AVAILABLE",
		2: "LAST_WRITE_TO_PRIOR_CHANNEL",
		3: "SAFE_TO_CLOSE_PRIOR_CHANNEL",
		4: "CLIENT_INTRODUCTION",
		5: "UPGRADE_FAILURE",
		6: "CLIENT_INTRODUCTION_ACK",
	}
	BandwidthUpgradeNegotiationFrame_EventType_value = map[string]int32{
		"UNKNOWN_EVENT_TYPE":          0,
		"UPGRADE_PATH_AVAILABLE":      1,
		"LAST_WRITE_TO_PRIOR_CHANNEL": 2,
		"SAFE_TO_CLOSE_PRIOR_CHANNEL": 3,
		"CLIENT_INTRODUCTION":         4,
		"UPGRADE_FAILURE":             5,
		"CLIENT_INTRODUCTION_ACK":     6,
	}
)

func (x BandwidthUpgradeNegotiationFrame_EventType) Enum() *BandwidthUpgradeNegotiationFrame_EventType {
	p := new(BandwidthUpgradeNegotiationFrame_EventType)
	*p = x
	return p
}

func (x BandwidthUpgradeNegotiationFrame_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BandwidthUpgradeNegotiationFrame_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[8].Descriptor()
}

func (BandwidthUpgradeNegotiationFrame_EventType) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[8]
}

func (x BandwidthUpgradeNegotiationFrame_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BandwidthUpgradeNegotiationFrame_EventType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BandwidthUpgradeNegotiationFrame_EventType(num)
	return nil
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_EventType.Descriptor instead.
func (BandwidthUpgradeNegotiationFrame_EventType) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0}
}

// Should always match cs/symbol:location.nearby.proto.connections.Medium
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium int32

const (
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_UNKNOWN_MEDIUM BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 0
	// Deprecated: Marked as deprecated in offline_wire_formats.proto.
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_MDNS         BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 1
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BLUETOOTH    BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 2
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WIFI_HOTSPOT BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 3
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BLE          BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 4
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WIFI_LAN     BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 5
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WIFI_AWARE   BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 6
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_NFC          BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 7
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WIFI_DIRECT  BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 8
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WEB_RTC      BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 9
	// 10 is reserved.
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_USB BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium = 11
)

// Enum value maps for BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium.
var (
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium_name = map[int32]string{
		0:  "UNKNOWN_MEDIUM",
		1:  "MDNS",
		2:  "BLUETOOTH",
		3:  "WIFI_HOTSPOT",
		4:  "BLE",
		5:  "WIFI_LAN",
		6:  "WIFI_AWARE",
		7:  "NFC",
		8:  "WIFI_DIRECT",
		9:  "WEB_RTC",
		11: "USB",
	}
	BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium_value = map[string]int32{
		"UNKNOWN_MEDIUM": 0,
		"MDNS":           1,
		"BLUETOOTH":      2,
		"WIFI_HOTSPOT":   3,
		"BLE":            4,
		"WIFI_LAN":       5,
		"WIFI_AWARE":     6,
		"NFC":            7,
		"WIFI_DIRECT":    8,
		"WEB_RTC":        9,
		"USB":            11,
	}
)

func (x BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium) Enum() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium {
	p := new(BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium)
	*p = x
	return p
}

func (x BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[9].Descriptor()
}

func (BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[9]
}

func (x BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium(num)
	return nil
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium.Descriptor instead.
func (BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0, 0}
}

type LocationStandard_Format int32

const (
	LocationStandard_UNKNOWN LocationStandard_Format = 0
	// E164 country codes:
	// https://en.wikipedia.org/wiki/List_of_country_calling_codes
	// e.g. +1 for USA
	LocationStandard_E164_CALLING LocationStandard_Format = 1
	// ISO 3166-1 alpha-2 country codes:
	// https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
	LocationStandard_ISO_3166_1_ALPHA_2 LocationStandard_Format = 2
)

// Enum value maps for LocationStandard_Format.
var (
	LocationStandard_Format_name = map[int32]string{
		0: "UNKNOWN",
		1: "E164_CALLING",
		2: "ISO_3166_1_ALPHA_2",
	}
	LocationStandard_Format_value = map[string]int32{
		"UNKNOWN":            0,
		"E164_CALLING":       1,
		"ISO_3166_1_ALPHA_2": 2,
	}
)

func (x LocationStandard_Format) Enum() *LocationStandard_Format {
	p := new(LocationStandard_Format)
	*p = x
	return p
}

func (x LocationStandard_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocationStandard_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[10].Descriptor()
}

func (LocationStandard_Format) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[10]
}

func (x LocationStandard_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LocationStandard_Format) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LocationStandard_Format(num)
	return nil
}

// Deprecated: Use LocationStandard_Format.Descriptor instead.
func (LocationStandard_Format) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{16, 0}
}

type OsInfo_OsType int32

const (
	OsInfo_UNKNOWN_OS_TYPE OsInfo_OsType = 0
	OsInfo_ANDROID         OsInfo_OsType = 1
	OsInfo_CHROME_OS       OsInfo_OsType = 2
	OsInfo_WINDOWS         OsInfo_OsType = 3
	OsInfo_APPLE           OsInfo_OsType = 4
	OsInfo_LINUX           OsInfo_OsType = 100 // g3 test environment
)

// Enum value maps for OsInfo_OsType.
var (
	OsInfo_OsType_name = map[int32]string{
		0:   "UNKNOWN_OS_TYPE",
		1:   "ANDROID",
		2:   "CHROME_OS",
		3:   "WINDOWS",
		4:   "APPLE",
		100: "LINUX",
	}
	OsInfo_OsType_value = map[string]int32{
		"UNKNOWN_OS_TYPE": 0,
		"ANDROID":         1,
		"CHROME_OS":       2,
		"WINDOWS":         3,
		"APPLE":           4,
		"LINUX":           100,
	}
)

func (x OsInfo_OsType) Enum() *OsInfo_OsType {
	p := new(OsInfo_OsType)
	*p = x
	return p
}

func (x OsInfo_OsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OsInfo_OsType) Descriptor() protoreflect.EnumDescriptor {
	return file_offline_wire_formats_proto_enumTypes[11].Descriptor()
}

func (OsInfo_OsType) Type() protoreflect.EnumType {
	return &file_offline_wire_formats_proto_enumTypes[11]
}

func (x OsInfo_OsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OsInfo_OsType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OsInfo_OsType(num)
	return nil
}

// Deprecated: Use OsInfo_OsType.Descriptor instead.
func (OsInfo_OsType) EnumDescriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{17, 0}
}

type OfflineFrame struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Version *OfflineFrame_Version  `protobuf:"varint,1,opt,name=version,enum=location.nearby.connections.OfflineFrame_Version" json:"version,omitempty"`
	// Right now there's only 1 version, but if there are more, exactly one of
	// the following fields will be set.
	V1            *V1Frame `protobuf:"bytes,2,opt,name=v1" json:"v1,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfflineFrame) Reset() {
	*x = OfflineFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineFrame) ProtoMessage() {}

func (x *OfflineFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineFrame.ProtoReflect.Descriptor instead.
func (*OfflineFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{0}
}

func (x *OfflineFrame) GetVersion() OfflineFrame_Version {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return OfflineFrame_UNKNOWN_VERSION
}

func (x *OfflineFrame) GetV1() *V1Frame {
	if x != nil {
		return x.V1
	}
	return nil
}

type V1Frame struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  *V1Frame_FrameType     `protobuf:"varint,1,opt,name=type,enum=location.nearby.connections.V1Frame_FrameType" json:"type,omitempty"`
	// Exactly one of the following fields will be set.
	ConnectionRequest           *ConnectionRequestFrame           `protobuf:"bytes,2,opt,name=connection_request,json=connectionRequest" json:"connection_request,omitempty"`
	ConnectionResponse          *ConnectionResponseFrame          `protobuf:"bytes,3,opt,name=connection_response,json=connectionResponse" json:"connection_response,omitempty"`
	PayloadTransfer             *PayloadTransferFrame             `protobuf:"bytes,4,opt,name=payload_transfer,json=payloadTransfer" json:"payload_transfer,omitempty"`
	BandwidthUpgradeNegotiation *BandwidthUpgradeNegotiationFrame `protobuf:"bytes,5,opt,name=bandwidth_upgrade_negotiation,json=bandwidthUpgradeNegotiation" json:"bandwidth_upgrade_negotiation,omitempty"`
	KeepAlive                   *KeepAliveFrame                   `protobuf:"bytes,6,opt,name=keep_alive,json=keepAlive" json:"keep_alive,omitempty"`
	Disconnection               *DisconnectionFrame               `protobuf:"bytes,7,opt,name=disconnection" json:"disconnection,omitempty"`
	PairedKeyEncryption         *PairedKeyEncryptionFrame         `protobuf:"bytes,8,opt,name=paired_key_encryption,json=pairedKeyEncryption" json:"paired_key_encryption,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *V1Frame) Reset() {
	*x = V1Frame{}
	mi := &file_offline_wire_formats_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1Frame) ProtoMessage() {}

func (x *V1Frame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1Frame.ProtoReflect.Descriptor instead.
func (*V1Frame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{1}
}

func (x *V1Frame) GetType() V1Frame_FrameType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return V1Frame_UNKNOWN_FRAME_TYPE
}

func (x *V1Frame) GetConnectionRequest() *ConnectionRequestFrame {
	if x != nil {
		return x.ConnectionRequest
	}
	return nil
}

func (x *V1Frame) GetConnectionResponse() *ConnectionResponseFrame {
	if x != nil {
		return x.ConnectionResponse
	}
	return nil
}

func (x *V1Frame) GetPayloadTransfer() *PayloadTransferFrame {
	if x != nil {
		return x.PayloadTransfer
	}
	return nil
}

func (x *V1Frame) GetBandwidthUpgradeNegotiation() *BandwidthUpgradeNegotiationFrame {
	if x != nil {
		return x.BandwidthUpgradeNegotiation
	}
	return nil
}

func (x *V1Frame) GetKeepAlive() *KeepAliveFrame {
	if x != nil {
		return x.KeepAlive
	}
	return nil
}

func (x *V1Frame) GetDisconnection() *DisconnectionFrame {
	if x != nil {
		return x.Disconnection
	}
	return nil
}

func (x *V1Frame) GetPairedKeyEncryption() *PairedKeyEncryptionFrame {
	if x != nil {
		return x.PairedKeyEncryption
	}
	return nil
}

type ConnectionRequestFrame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EndpointId    *string                `protobuf:"bytes,1,opt,name=endpoint_id,json=endpointId" json:"endpoint_id,omitempty"`
	EndpointName  []byte                 `protobuf:"bytes,2,opt,name=endpoint_name,json=endpointName" json:"endpoint_name,omitempty"`
	HandshakeData []byte                 `protobuf:"bytes,3,opt,name=handshake_data,json=handshakeData" json:"handshake_data,omitempty"`
	// A random number generated for each outgoing connection that is presently
	// used to act as a tiebreaker when 2 devices connect to each other
	// simultaneously; this can also be used for other initialization-scoped
	// things in the future.
	Nonce *int32 `protobuf:"varint,4,opt,name=nonce" json:"nonce,omitempty"`
	// The mediums this device supports upgrading to. This list should be filtered
	// by both the strategy and this device's individual limitations.
	Mediums                 []ConnectionRequestFrame_Medium `protobuf:"varint,5,rep,name=mediums,enum=location.nearby.connections.ConnectionRequestFrame_Medium" json:"mediums,omitempty"`
	EndpointInfo            []byte                          `protobuf:"bytes,6,opt,name=endpoint_info,json=endpointInfo" json:"endpoint_info,omitempty"`
	MediumMetadata          *MediumMetadata                 `protobuf:"bytes,7,opt,name=medium_metadata,json=mediumMetadata" json:"medium_metadata,omitempty"`
	KeepAliveIntervalMillis *int32                          `protobuf:"varint,8,opt,name=keep_alive_interval_millis,json=keepAliveIntervalMillis" json:"keep_alive_interval_millis,omitempty"`
	KeepAliveTimeoutMillis  *int32                          `protobuf:"varint,9,opt,name=keep_alive_timeout_millis,json=keepAliveTimeoutMillis" json:"keep_alive_timeout_millis,omitempty"`
	// The type of {@link Device} object.
	DeviceType *int32 `protobuf:"varint,10,opt,name=device_type,json=deviceType,def=0" json:"device_type,omitempty"`
	// The bytes of serialized {@link Device} object.
	DeviceInfo    []byte `protobuf:"bytes,11,opt,name=device_info,json=deviceInfo" json:"device_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ConnectionRequestFrame fields.
const (
	Default_ConnectionRequestFrame_DeviceType = int32(0)
)

func (x *ConnectionRequestFrame) Reset() {
	*x = ConnectionRequestFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionRequestFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequestFrame) ProtoMessage() {}

func (x *ConnectionRequestFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequestFrame.ProtoReflect.Descriptor instead.
func (*ConnectionRequestFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectionRequestFrame) GetEndpointId() string {
	if x != nil && x.EndpointId != nil {
		return *x.EndpointId
	}
	return ""
}

func (x *ConnectionRequestFrame) GetEndpointName() []byte {
	if x != nil {
		return x.EndpointName
	}
	return nil
}

func (x *ConnectionRequestFrame) GetHandshakeData() []byte {
	if x != nil {
		return x.HandshakeData
	}
	return nil
}

func (x *ConnectionRequestFrame) GetNonce() int32 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ConnectionRequestFrame) GetMediums() []ConnectionRequestFrame_Medium {
	if x != nil {
		return x.Mediums
	}
	return nil
}

func (x *ConnectionRequestFrame) GetEndpointInfo() []byte {
	if x != nil {
		return x.EndpointInfo
	}
	return nil
}

func (x *ConnectionRequestFrame) GetMediumMetadata() *MediumMetadata {
	if x != nil {
		return x.MediumMetadata
	}
	return nil
}

func (x *ConnectionRequestFrame) GetKeepAliveIntervalMillis() int32 {
	if x != nil && x.KeepAliveIntervalMillis != nil {
		return *x.KeepAliveIntervalMillis
	}
	return 0
}

func (x *ConnectionRequestFrame) GetKeepAliveTimeoutMillis() int32 {
	if x != nil && x.KeepAliveTimeoutMillis != nil {
		return *x.KeepAliveTimeoutMillis
	}
	return 0
}

func (x *ConnectionRequestFrame) GetDeviceType() int32 {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return Default_ConnectionRequestFrame_DeviceType
}

func (x *ConnectionRequestFrame) GetDeviceInfo() []byte {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type ConnectionResponseFrame struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// One of:
	//
	// - ConnectionsStatusCodes.STATUS_OK
	// - ConnectionsStatusCodes.STATUS_CONNECTION_REJECTED.
	//
	// Deprecated: Marked as deprecated in offline_wire_formats.proto.
	Status        *int32                                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	HandshakeData []byte                                  `protobuf:"bytes,2,opt,name=handshake_data,json=handshakeData" json:"handshake_data,omitempty"`
	Response      *ConnectionResponseFrame_ResponseStatus `protobuf:"varint,3,opt,name=response,enum=location.nearby.connections.ConnectionResponseFrame_ResponseStatus" json:"response,omitempty"`
	OsInfo        *OsInfo                                 `protobuf:"bytes,4,opt,name=os_info,json=osInfo" json:"os_info,omitempty"`
	// A bitmask value to indicate which medium supports Multiplex transmission
	// feature. Each supporting medium could utilize one bit starting from the
	// least significant bit in this field. eq. BT utilizes the LSB bit which 0x01
	// means bt supports multiplex while 0x00 means not. Refer to ClientProxy.java
	// for the bit usages.
	MultiplexSocketBitmask   *int32 `protobuf:"varint,5,opt,name=multiplex_socket_bitmask,json=multiplexSocketBitmask" json:"multiplex_socket_bitmask,omitempty"`
	NearbyConnectionsVersion *int32 `protobuf:"varint,6,opt,name=nearby_connections_version,json=nearbyConnectionsVersion" json:"nearby_connections_version,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ConnectionResponseFrame) Reset() {
	*x = ConnectionResponseFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionResponseFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponseFrame) ProtoMessage() {}

func (x *ConnectionResponseFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponseFrame.ProtoReflect.Descriptor instead.
func (*ConnectionResponseFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{3}
}

// Deprecated: Marked as deprecated in offline_wire_formats.proto.
func (x *ConnectionResponseFrame) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ConnectionResponseFrame) GetHandshakeData() []byte {
	if x != nil {
		return x.HandshakeData
	}
	return nil
}

func (x *ConnectionResponseFrame) GetResponse() ConnectionResponseFrame_ResponseStatus {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return ConnectionResponseFrame_UNKNOWN_RESPONSE_STATUS
}

func (x *ConnectionResponseFrame) GetOsInfo() *OsInfo {
	if x != nil {
		return x.OsInfo
	}
	return nil
}

func (x *ConnectionResponseFrame) GetMultiplexSocketBitmask() int32 {
	if x != nil && x.MultiplexSocketBitmask != nil {
		return *x.MultiplexSocketBitmask
	}
	return 0
}

func (x *ConnectionResponseFrame) GetNearbyConnectionsVersion() int32 {
	if x != nil && x.NearbyConnectionsVersion != nil {
		return *x.NearbyConnectionsVersion
	}
	return 0
}

type PayloadTransferFrame struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	PacketType    *PayloadTransferFrame_PacketType    `protobuf:"varint,1,opt,name=packet_type,json=packetType,enum=location.nearby.connections.PayloadTransferFrame_PacketType" json:"packet_type,omitempty"`
	PayloadHeader *PayloadTransferFrame_PayloadHeader `protobuf:"bytes,2,opt,name=payload_header,json=payloadHeader" json:"payload_header,omitempty"`
	// Exactly one of the following fields will be set, depending on the type.
	PayloadChunk   *PayloadTransferFrame_PayloadChunk   `protobuf:"bytes,3,opt,name=payload_chunk,json=payloadChunk" json:"payload_chunk,omitempty"`
	ControlMessage *PayloadTransferFrame_ControlMessage `protobuf:"bytes,4,opt,name=control_message,json=controlMessage" json:"control_message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PayloadTransferFrame) Reset() {
	*x = PayloadTransferFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadTransferFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadTransferFrame) ProtoMessage() {}

func (x *PayloadTransferFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadTransferFrame.ProtoReflect.Descriptor instead.
func (*PayloadTransferFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4}
}

func (x *PayloadTransferFrame) GetPacketType() PayloadTransferFrame_PacketType {
	if x != nil && x.PacketType != nil {
		return *x.PacketType
	}
	return PayloadTransferFrame_UNKNOWN_PACKET_TYPE
}

func (x *PayloadTransferFrame) GetPayloadHeader() *PayloadTransferFrame_PayloadHeader {
	if x != nil {
		return x.PayloadHeader
	}
	return nil
}

func (x *PayloadTransferFrame) GetPayloadChunk() *PayloadTransferFrame_PayloadChunk {
	if x != nil {
		return x.PayloadChunk
	}
	return nil
}

func (x *PayloadTransferFrame) GetControlMessage() *PayloadTransferFrame_ControlMessage {
	if x != nil {
		return x.ControlMessage
	}
	return nil
}

type BandwidthUpgradeNegotiationFrame struct {
	state     protoimpl.MessageState                      `protogen:"open.v1"`
	EventType *BandwidthUpgradeNegotiationFrame_EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,enum=location.nearby.connections.BandwidthUpgradeNegotiationFrame_EventType" json:"event_type,omitempty"`
	// Exactly one of the following fields will be set.
	UpgradePathInfo       *BandwidthUpgradeNegotiationFrame_UpgradePathInfo       `protobuf:"bytes,2,opt,name=upgrade_path_info,json=upgradePathInfo" json:"upgrade_path_info,omitempty"`
	ClientIntroduction    *BandwidthUpgradeNegotiationFrame_ClientIntroduction    `protobuf:"bytes,3,opt,name=client_introduction,json=clientIntroduction" json:"client_introduction,omitempty"`
	ClientIntroductionAck *BandwidthUpgradeNegotiationFrame_ClientIntroductionAck `protobuf:"bytes,4,opt,name=client_introduction_ack,json=clientIntroductionAck" json:"client_introduction_ack,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame) Reset() {
	*x = BandwidthUpgradeNegotiationFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5}
}

func (x *BandwidthUpgradeNegotiationFrame) GetEventType() BandwidthUpgradeNegotiationFrame_EventType {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return BandwidthUpgradeNegotiationFrame_UNKNOWN_EVENT_TYPE
}

func (x *BandwidthUpgradeNegotiationFrame) GetUpgradePathInfo() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo {
	if x != nil {
		return x.UpgradePathInfo
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame) GetClientIntroduction() *BandwidthUpgradeNegotiationFrame_ClientIntroduction {
	if x != nil {
		return x.ClientIntroduction
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame) GetClientIntroductionAck() *BandwidthUpgradeNegotiationFrame_ClientIntroductionAck {
	if x != nil {
		return x.ClientIntroductionAck
	}
	return nil
}

type KeepAliveFrame struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// And ack will be sent after receiving KEEP_ALIVE frame.
	Ack           *bool `protobuf:"varint,1,opt,name=ack" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepAliveFrame) Reset() {
	*x = KeepAliveFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveFrame) ProtoMessage() {}

func (x *KeepAliveFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveFrame.ProtoReflect.Descriptor instead.
func (*KeepAliveFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{6}
}

func (x *KeepAliveFrame) GetAck() bool {
	if x != nil && x.Ack != nil {
		return *x.Ack
	}
	return false
}

// Informs the remote side to immediately severe the socket connection.
// Used in bandwidth upgrades to get around a race condition, but may be used
// in other situations to trigger a faster disconnection event than waiting for
// socket closed on the remote side.
type DisconnectionFrame struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Apply safe-to-disconnect protocol if true.
	RequestSafeToDisconnect *bool `protobuf:"varint,1,opt,name=request_safe_to_disconnect,json=requestSafeToDisconnect" json:"request_safe_to_disconnect,omitempty"`
	// Ack of receiving Disconnection frame will be sent to the sender
	// frame.
	AckSafeToDisconnect *bool `protobuf:"varint,2,opt,name=ack_safe_to_disconnect,json=ackSafeToDisconnect" json:"ack_safe_to_disconnect,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DisconnectionFrame) Reset() {
	*x = DisconnectionFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectionFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectionFrame) ProtoMessage() {}

func (x *DisconnectionFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectionFrame.ProtoReflect.Descriptor instead.
func (*DisconnectionFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{7}
}

func (x *DisconnectionFrame) GetRequestSafeToDisconnect() bool {
	if x != nil && x.RequestSafeToDisconnect != nil {
		return *x.RequestSafeToDisconnect
	}
	return false
}

func (x *DisconnectionFrame) GetAckSafeToDisconnect() bool {
	if x != nil && x.AckSafeToDisconnect != nil {
		return *x.AckSafeToDisconnect
	}
	return false
}

// A paired key encryption packet sent between devices, contains signed data.
type PairedKeyEncryptionFrame struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The encrypted data (raw authentication token for the established
	// connection) in byte array format.
	SignedData    []byte `protobuf:"bytes,1,opt,name=signed_data,json=signedData" json:"signed_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PairedKeyEncryptionFrame) Reset() {
	*x = PairedKeyEncryptionFrame{}
	mi := &file_offline_wire_formats_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PairedKeyEncryptionFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairedKeyEncryptionFrame) ProtoMessage() {}

func (x *PairedKeyEncryptionFrame) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairedKeyEncryptionFrame.ProtoReflect.Descriptor instead.
func (*PairedKeyEncryptionFrame) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{8}
}

func (x *PairedKeyEncryptionFrame) GetSignedData() []byte {
	if x != nil {
		return x.SignedData
	}
	return nil
}

type MediumMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if local device supports 5GHz.
	Supports_5Ghz *bool `protobuf:"varint,1,opt,name=supports_5_ghz,json=supports5Ghz" json:"supports_5_ghz,omitempty"`
	// WiFi LAN BSSID, in the form of a six-byte MAC address: XX:XX:XX:XX:XX:XX
	Bssid *string `protobuf:"bytes,2,opt,name=bssid" json:"bssid,omitempty"`
	// IP address, in network byte order: the highest order byte of the address is
	// in byte[0].
	IpAddress []byte `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	// True if local device supports 6GHz.
	Supports_6Ghz *bool `protobuf:"varint,4,opt,name=supports_6_ghz,json=supports6Ghz" json:"supports_6_ghz,omitempty"`
	// True if local device has mobile radio.
	MobileRadio *bool `protobuf:"varint,5,opt,name=mobile_radio,json=mobileRadio" json:"mobile_radio,omitempty"`
	// The frequency of the WiFi LAN AP(in MHz). Or -1 is not associated with an
	// AP over WiFi, -2 represents the active network uses an Ethernet transport.
	ApFrequency *int32 `protobuf:"varint,6,opt,name=ap_frequency,json=apFrequency,def=-1" json:"ap_frequency,omitempty"`
	// Available channels on the local device.
	AvailableChannels *AvailableChannels `protobuf:"bytes,7,opt,name=available_channels,json=availableChannels" json:"available_channels,omitempty"`
	// Usable WiFi Direct client channels on the local device.
	WifiDirectCliUsableChannels *WifiDirectCliUsableChannels `protobuf:"bytes,8,opt,name=wifi_direct_cli_usable_channels,json=wifiDirectCliUsableChannels" json:"wifi_direct_cli_usable_channels,omitempty"`
	// Usable WiFi LAN channels on the local device.
	WifiLanUsableChannels *WifiLanUsableChannels `protobuf:"bytes,9,opt,name=wifi_lan_usable_channels,json=wifiLanUsableChannels" json:"wifi_lan_usable_channels,omitempty"`
	// Usable WiFi Aware channels on the local device.
	WifiAwareUsableChannels *WifiAwareUsableChannels `protobuf:"bytes,10,opt,name=wifi_aware_usable_channels,json=wifiAwareUsableChannels" json:"wifi_aware_usable_channels,omitempty"`
	// Usable WiFi Hotspot STA channels on the local device.
	WifiHotspotStaUsableChannels *WifiHotspotStaUsableChannels `protobuf:"bytes,11,opt,name=wifi_hotspot_sta_usable_channels,json=wifiHotspotStaUsableChannels" json:"wifi_hotspot_sta_usable_channels,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

// Default values for MediumMetadata fields.
const (
	Default_MediumMetadata_ApFrequency = int32(-1)
)

func (x *MediumMetadata) Reset() {
	*x = MediumMetadata{}
	mi := &file_offline_wire_formats_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediumMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediumMetadata) ProtoMessage() {}

func (x *MediumMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediumMetadata.ProtoReflect.Descriptor instead.
func (*MediumMetadata) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{9}
}

func (x *MediumMetadata) GetSupports_5Ghz() bool {
	if x != nil && x.Supports_5Ghz != nil {
		return *x.Supports_5Ghz
	}
	return false
}

func (x *MediumMetadata) GetBssid() string {
	if x != nil && x.Bssid != nil {
		return *x.Bssid
	}
	return ""
}

func (x *MediumMetadata) GetIpAddress() []byte {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *MediumMetadata) GetSupports_6Ghz() bool {
	if x != nil && x.Supports_6Ghz != nil {
		return *x.Supports_6Ghz
	}
	return false
}

func (x *MediumMetadata) GetMobileRadio() bool {
	if x != nil && x.MobileRadio != nil {
		return *x.MobileRadio
	}
	return false
}

func (x *MediumMetadata) GetApFrequency() int32 {
	if x != nil && x.ApFrequency != nil {
		return *x.ApFrequency
	}
	return Default_MediumMetadata_ApFrequency
}

func (x *MediumMetadata) GetAvailableChannels() *AvailableChannels {
	if x != nil {
		return x.AvailableChannels
	}
	return nil
}

func (x *MediumMetadata) GetWifiDirectCliUsableChannels() *WifiDirectCliUsableChannels {
	if x != nil {
		return x.WifiDirectCliUsableChannels
	}
	return nil
}

func (x *MediumMetadata) GetWifiLanUsableChannels() *WifiLanUsableChannels {
	if x != nil {
		return x.WifiLanUsableChannels
	}
	return nil
}

func (x *MediumMetadata) GetWifiAwareUsableChannels() *WifiAwareUsableChannels {
	if x != nil {
		return x.WifiAwareUsableChannels
	}
	return nil
}

func (x *MediumMetadata) GetWifiHotspotStaUsableChannels() *WifiHotspotStaUsableChannels {
	if x != nil {
		return x.WifiHotspotStaUsableChannels
	}
	return nil
}

// Available channels on the local device.
type AvailableChannels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []int32                `protobuf:"varint,1,rep,packed,name=channels" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableChannels) Reset() {
	*x = AvailableChannels{}
	mi := &file_offline_wire_formats_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableChannels) ProtoMessage() {}

func (x *AvailableChannels) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableChannels.ProtoReflect.Descriptor instead.
func (*AvailableChannels) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{10}
}

func (x *AvailableChannels) GetChannels() []int32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Usable WiFi Direct client channels on the local device.
type WifiDirectCliUsableChannels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []int32                `protobuf:"varint,1,rep,packed,name=channels" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiDirectCliUsableChannels) Reset() {
	*x = WifiDirectCliUsableChannels{}
	mi := &file_offline_wire_formats_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiDirectCliUsableChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiDirectCliUsableChannels) ProtoMessage() {}

func (x *WifiDirectCliUsableChannels) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiDirectCliUsableChannels.ProtoReflect.Descriptor instead.
func (*WifiDirectCliUsableChannels) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{11}
}

func (x *WifiDirectCliUsableChannels) GetChannels() []int32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Usable WiFi LAN channels on the local device.
type WifiLanUsableChannels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []int32                `protobuf:"varint,1,rep,packed,name=channels" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiLanUsableChannels) Reset() {
	*x = WifiLanUsableChannels{}
	mi := &file_offline_wire_formats_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiLanUsableChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiLanUsableChannels) ProtoMessage() {}

func (x *WifiLanUsableChannels) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiLanUsableChannels.ProtoReflect.Descriptor instead.
func (*WifiLanUsableChannels) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{12}
}

func (x *WifiLanUsableChannels) GetChannels() []int32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Usable WiFi Aware channels on the local device.
type WifiAwareUsableChannels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []int32                `protobuf:"varint,1,rep,packed,name=channels" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiAwareUsableChannels) Reset() {
	*x = WifiAwareUsableChannels{}
	mi := &file_offline_wire_formats_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiAwareUsableChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAwareUsableChannels) ProtoMessage() {}

func (x *WifiAwareUsableChannels) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAwareUsableChannels.ProtoReflect.Descriptor instead.
func (*WifiAwareUsableChannels) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{13}
}

func (x *WifiAwareUsableChannels) GetChannels() []int32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Usable WiFi Hotspot STA channels on the local device.
type WifiHotspotStaUsableChannels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []int32                `protobuf:"varint,1,rep,packed,name=channels" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiHotspotStaUsableChannels) Reset() {
	*x = WifiHotspotStaUsableChannels{}
	mi := &file_offline_wire_formats_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiHotspotStaUsableChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiHotspotStaUsableChannels) ProtoMessage() {}

func (x *WifiHotspotStaUsableChannels) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiHotspotStaUsableChannels.ProtoReflect.Descriptor instead.
func (*WifiHotspotStaUsableChannels) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{14}
}

func (x *WifiHotspotStaUsableChannels) GetChannels() []int32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

// LocationHint is used to specify a location as well as format.
type LocationHint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Location is the location, provided in the format specified by format.
	Location *string `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	// the format of location.
	Format        *LocationStandard_Format `protobuf:"varint,2,opt,name=format,enum=location.nearby.connections.LocationStandard_Format" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationHint) Reset() {
	*x = LocationHint{}
	mi := &file_offline_wire_formats_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationHint) ProtoMessage() {}

func (x *LocationHint) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationHint.ProtoReflect.Descriptor instead.
func (*LocationHint) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{15}
}

func (x *LocationHint) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *LocationHint) GetFormat() LocationStandard_Format {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return LocationStandard_UNKNOWN
}

type LocationStandard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationStandard) Reset() {
	*x = LocationStandard{}
	mi := &file_offline_wire_formats_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationStandard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationStandard) ProtoMessage() {}

func (x *LocationStandard) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationStandard.ProtoReflect.Descriptor instead.
func (*LocationStandard) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{16}
}

// Device capability for OS information.
type OsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *OsInfo_OsType         `protobuf:"varint,1,opt,name=type,enum=location.nearby.connections.OsInfo_OsType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OsInfo) Reset() {
	*x = OsInfo{}
	mi := &file_offline_wire_formats_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsInfo) ProtoMessage() {}

func (x *OsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsInfo.ProtoReflect.Descriptor instead.
func (*OsInfo) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{17}
}

func (x *OsInfo) GetType() OsInfo_OsType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return OsInfo_UNKNOWN_OS_TYPE
}

type PayloadTransferFrame_PayloadHeader struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Id            *int64                                          `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type          *PayloadTransferFrame_PayloadHeader_PayloadType `protobuf:"varint,2,opt,name=type,enum=location.nearby.connections.PayloadTransferFrame_PayloadHeader_PayloadType" json:"type,omitempty"`
	TotalSize     *int64                                          `protobuf:"varint,3,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
	IsSensitive   *bool                                           `protobuf:"varint,4,opt,name=is_sensitive,json=isSensitive" json:"is_sensitive,omitempty"`
	FileName      *string                                         `protobuf:"bytes,5,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	ParentFolder  *string                                         `protobuf:"bytes,6,opt,name=parent_folder,json=parentFolder" json:"parent_folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadTransferFrame_PayloadHeader) Reset() {
	*x = PayloadTransferFrame_PayloadHeader{}
	mi := &file_offline_wire_formats_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadTransferFrame_PayloadHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadTransferFrame_PayloadHeader) ProtoMessage() {}

func (x *PayloadTransferFrame_PayloadHeader) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadTransferFrame_PayloadHeader.ProtoReflect.Descriptor instead.
func (*PayloadTransferFrame_PayloadHeader) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PayloadTransferFrame_PayloadHeader) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PayloadTransferFrame_PayloadHeader) GetType() PayloadTransferFrame_PayloadHeader_PayloadType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return PayloadTransferFrame_PayloadHeader_UNKNOWN_PAYLOAD_TYPE
}

func (x *PayloadTransferFrame_PayloadHeader) GetTotalSize() int64 {
	if x != nil && x.TotalSize != nil {
		return *x.TotalSize
	}
	return 0
}

func (x *PayloadTransferFrame_PayloadHeader) GetIsSensitive() bool {
	if x != nil && x.IsSensitive != nil {
		return *x.IsSensitive
	}
	return false
}

func (x *PayloadTransferFrame_PayloadHeader) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *PayloadTransferFrame_PayloadHeader) GetParentFolder() string {
	if x != nil && x.ParentFolder != nil {
		return *x.ParentFolder
	}
	return ""
}

// Accompanies DATA packets.
type PayloadTransferFrame_PayloadChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flags         *int32                 `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
	Offset        *int64                 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadTransferFrame_PayloadChunk) Reset() {
	*x = PayloadTransferFrame_PayloadChunk{}
	mi := &file_offline_wire_formats_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadTransferFrame_PayloadChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadTransferFrame_PayloadChunk) ProtoMessage() {}

func (x *PayloadTransferFrame_PayloadChunk) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadTransferFrame_PayloadChunk.ProtoReflect.Descriptor instead.
func (*PayloadTransferFrame_PayloadChunk) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4, 1}
}

func (x *PayloadTransferFrame_PayloadChunk) GetFlags() int32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *PayloadTransferFrame_PayloadChunk) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *PayloadTransferFrame_PayloadChunk) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// Accompanies CONTROL packets.
type PayloadTransferFrame_ControlMessage struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Event         *PayloadTransferFrame_ControlMessage_EventType `protobuf:"varint,1,opt,name=event,enum=location.nearby.connections.PayloadTransferFrame_ControlMessage_EventType" json:"event,omitempty"`
	Offset        *int64                                         `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadTransferFrame_ControlMessage) Reset() {
	*x = PayloadTransferFrame_ControlMessage{}
	mi := &file_offline_wire_formats_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadTransferFrame_ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadTransferFrame_ControlMessage) ProtoMessage() {}

func (x *PayloadTransferFrame_ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadTransferFrame_ControlMessage.ProtoReflect.Descriptor instead.
func (*PayloadTransferFrame_ControlMessage) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{4, 2}
}

func (x *PayloadTransferFrame_ControlMessage) GetEvent() PayloadTransferFrame_ControlMessage_EventType {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return PayloadTransferFrame_ControlMessage_UNKNOWN_EVENT_TYPE
}

func (x *PayloadTransferFrame_ControlMessage) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

// Accompanies UPGRADE_PATH_AVAILABLE and UPGRADE_FAILURE events.
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo struct {
	state  protoimpl.MessageState                                   `protogen:"open.v1"`
	Medium *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium `protobuf:"varint,1,opt,name=medium,enum=location.nearby.connections.BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium" json:"medium,omitempty"`
	// Exactly one of the following fields will be set.
	WifiHotspotCredentials *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials `protobuf:"bytes,2,opt,name=wifi_hotspot_credentials,json=wifiHotspotCredentials" json:"wifi_hotspot_credentials,omitempty"`
	WifiLanSocket          *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket          `protobuf:"bytes,3,opt,name=wifi_lan_socket,json=wifiLanSocket" json:"wifi_lan_socket,omitempty"`
	BluetoothCredentials   *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials   `protobuf:"bytes,4,opt,name=bluetooth_credentials,json=bluetoothCredentials" json:"bluetooth_credentials,omitempty"`
	WifiAwareCredentials   *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials   `protobuf:"bytes,5,opt,name=wifi_aware_credentials,json=wifiAwareCredentials" json:"wifi_aware_credentials,omitempty"`
	WifiDirectCredentials  *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials  `protobuf:"bytes,6,opt,name=wifi_direct_credentials,json=wifiDirectCredentials" json:"wifi_direct_credentials,omitempty"`
	WebRtcCredentials      *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials      `protobuf:"bytes,8,opt,name=web_rtc_credentials,json=webRtcCredentials" json:"web_rtc_credentials,omitempty"`
	// Disable Encryption for this upgrade medium to improve throughput.
	SupportsDisablingEncryption *bool `protobuf:"varint,7,opt,name=supports_disabling_encryption,json=supportsDisablingEncryption" json:"supports_disabling_encryption,omitempty"`
	// An ack will be sent after the CLIENT_INTRODUCTION frame.
	SupportsClientIntroductionAck *bool `protobuf:"varint,9,opt,name=supports_client_introduction_ack,json=supportsClientIntroductionAck" json:"supports_client_introduction_ack,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo{}
	mi := &file_offline_wire_formats_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetMedium() BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium {
	if x != nil && x.Medium != nil {
		return *x.Medium
	}
	return BandwidthUpgradeNegotiationFrame_UpgradePathInfo_UNKNOWN_MEDIUM
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetWifiHotspotCredentials() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials {
	if x != nil {
		return x.WifiHotspotCredentials
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetWifiLanSocket() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket {
	if x != nil {
		return x.WifiLanSocket
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetBluetoothCredentials() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials {
	if x != nil {
		return x.BluetoothCredentials
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetWifiAwareCredentials() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials {
	if x != nil {
		return x.WifiAwareCredentials
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetWifiDirectCredentials() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials {
	if x != nil {
		return x.WifiDirectCredentials
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetWebRtcCredentials() *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials {
	if x != nil {
		return x.WebRtcCredentials
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetSupportsDisablingEncryption() bool {
	if x != nil && x.SupportsDisablingEncryption != nil {
		return *x.SupportsDisablingEncryption
	}
	return false
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo) GetSupportsClientIntroductionAck() bool {
	if x != nil && x.SupportsClientIntroductionAck != nil {
		return *x.SupportsClientIntroductionAck
	}
	return false
}

// Accompanies CLIENT_INTRODUCTION events.
type BandwidthUpgradeNegotiationFrame_ClientIntroduction struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	EndpointId                  *string                `protobuf:"bytes,1,opt,name=endpoint_id,json=endpointId" json:"endpoint_id,omitempty"`
	SupportsDisablingEncryption *bool                  `protobuf:"varint,2,opt,name=supports_disabling_encryption,json=supportsDisablingEncryption" json:"supports_disabling_encryption,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroduction) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_ClientIntroduction{}
	mi := &file_offline_wire_formats_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_ClientIntroduction) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroduction) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_ClientIntroduction.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_ClientIntroduction) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 1}
}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroduction) GetEndpointId() string {
	if x != nil && x.EndpointId != nil {
		return *x.EndpointId
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroduction) GetSupportsDisablingEncryption() bool {
	if x != nil && x.SupportsDisablingEncryption != nil {
		return *x.SupportsDisablingEncryption
	}
	return false
}

// Accompanies CLIENT_INTRODUCTION_ACK events.
type BandwidthUpgradeNegotiationFrame_ClientIntroductionAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroductionAck) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_ClientIntroductionAck{}
	mi := &file_offline_wire_formats_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroductionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_ClientIntroductionAck) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_ClientIntroductionAck) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_ClientIntroductionAck.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_ClientIntroductionAck) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 2}
}

// Accompanies Medium.WIFI_HOTSPOT.
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Ssid     *string                `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Password *string                `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Port     *int32                 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Gateway  *string                `protobuf:"bytes,4,opt,name=gateway,def=0.0.0.0" json:"gateway,omitempty"`
	// This field can be a band or frequency
	Frequency     *int32 `protobuf:"varint,5,opt,name=frequency,def=-1" json:"frequency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials fields.
const (
	Default_BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials_Gateway   = string("0.0.0.0")
	Default_BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials_Frequency = int32(-1)
)

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials{}
	mi := &file_offline_wire_formats_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) GetGateway() string {
	if x != nil && x.Gateway != nil {
		return *x.Gateway
	}
	return Default_BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials_Gateway
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials) GetFrequency() int32 {
	if x != nil && x.Frequency != nil {
		return *x.Frequency
	}
	return Default_BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials_Frequency
}

// Accompanies Medium.WIFI_LAN.
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddress     []byte                 `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	WifiPort      *int32                 `protobuf:"varint,2,opt,name=wifi_port,json=wifiPort" json:"wifi_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket{}
	mi := &file_offline_wire_formats_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0, 1}
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket) GetIpAddress() []byte {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket) GetWifiPort() int32 {
	if x != nil && x.WifiPort != nil {
		return *x.WifiPort
	}
	return 0
}

// Accompanies Medium.BLUETOOTH.
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   *string                `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	MacAddress    *string                `protobuf:"bytes,2,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials{}
	mi := &file_offline_wire_formats_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0, 2}
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials) GetMacAddress() string {
	if x != nil && x.MacAddress != nil {
		return *x.MacAddress
	}
	return ""
}

// Accompanies Medium.WIFI_AWARE.
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     *string                `protobuf:"bytes,1,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceInfo   []byte                 `protobuf:"bytes,2,opt,name=service_info,json=serviceInfo" json:"service_info,omitempty"`
	Password      *string                `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials{}
	mi := &file_offline_wire_formats_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0, 3}
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) GetServiceId() string {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) GetServiceInfo() []byte {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

// Accompanies Medium.WIFI_DIRECT.
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ssid          *string                `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Password      *string                `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Port          *int32                 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Frequency     *int32                 `protobuf:"varint,4,opt,name=frequency" json:"frequency,omitempty"`
	Gateway       *string                `protobuf:"bytes,5,opt,name=gateway,def=0.0.0.0" json:"gateway,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials fields.
const (
	Default_BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials_Gateway = string("0.0.0.0")
)

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials{}
	mi := &file_offline_wire_formats_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0, 4}
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) GetFrequency() int32 {
	if x != nil && x.Frequency != nil {
		return *x.Frequency
	}
	return 0
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials) GetGateway() string {
	if x != nil && x.Gateway != nil {
		return *x.Gateway
	}
	return Default_BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials_Gateway
}

// Accompanies Medium.WEB_RTC
type BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        *string                `protobuf:"bytes,1,opt,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	LocationHint  *LocationHint          `protobuf:"bytes,2,opt,name=location_hint,json=locationHint" json:"location_hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials) Reset() {
	*x = BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials{}
	mi := &file_offline_wire_formats_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials) ProtoMessage() {}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_offline_wire_formats_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials.ProtoReflect.Descriptor instead.
func (*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials) Descriptor() ([]byte, []int) {
	return file_offline_wire_formats_proto_rawDescGZIP(), []int{5, 0, 5}
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

func (x *BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials) GetLocationHint() *LocationHint {
	if x != nil {
		return x.LocationHint
	}
	return nil
}

var File_offline_wire_formats_proto protoreflect.FileDescriptor

const file_offline_wire_formats_proto_rawDesc = "" +
	"\n" +
	"\x1aoffline_wire_formats.proto\x12\x1blocation.nearby.connections\"\xb9\x01\n" +
	"\fOfflineFrame\x12K\n" +
	"\aversion\x18\x01 \x01(\x0e21.location.nearby.connections.OfflineFrame.VersionR\aversion\x124\n" +
	"\x02v1\x18\x02 \x01(\v2$.location.nearby.connections.V1FrameR\x02v1\"&\n" +
	"\aVersion\x12\x13\n" +
	"\x0fUNKNOWN_VERSION\x10\x00\x12\x06\n" +
	"\x02V1\x10\x01\"\xd6\a\n" +
	"\aV1Frame\x12B\n" +
	"\x04type\x18\x01 \x01(\x0e2..location.nearby.connections.V1Frame.FrameTypeR\x04type\x12b\n" +
	"\x12connection_request\x18\x02 \x01(\v23.location.nearby.connections.ConnectionRequestFrameR\x11connectionRequest\x12e\n" +
	"\x13connection_response\x18\x03 \x01(\v24.location.nearby.connections.ConnectionResponseFrameR\x12connectionResponse\x12\\\n" +
	"\x10payload_transfer\x18\x04 \x01(\v21.location.nearby.connections.PayloadTransferFrameR\x0fpayloadTransfer\x12\x81\x01\n" +
	"\x1dbandwidth_upgrade_negotiation\x18\x05 \x01(\v2=.location.nearby.connections.BandwidthUpgradeNegotiationFrameR\x1bbandwidthUpgradeNegotiation\x12J\n" +
	"\n" +
	"keep_alive\x18\x06 \x01(\v2+.location.nearby.connections.KeepAliveFrameR\tkeepAlive\x12U\n" +
	"\rdisconnection\x18\a \x01(\v2/.location.nearby.connections.DisconnectionFrameR\rdisconnection\x12i\n" +
	"\x15paired_key_encryption\x18\b \x01(\v25.location.nearby.connections.PairedKeyEncryptionFrameR\x13pairedKeyEncryption\"\xcb\x01\n" +
	"\tFrameType\x12\x16\n" +
	"\x12UNKNOWN_FRAME_TYPE\x10\x00\x12\x16\n" +
	"\x12CONNECTION_REQUEST\x10\x01\x12\x17\n" +
	"\x13CONNECTION_RESPONSE\x10\x02\x12\x14\n" +
	"\x10PAYLOAD_TRANSFER\x10\x03\x12!\n" +
	"\x1dBANDWIDTH_UPGRADE_NEGOTIATION\x10\x04\x12\x0e\n" +
	"\n" +
	"KEEP_ALIVE\x10\x05\x12\x11\n" +
	"\rDISCONNECTION\x10\x06\x12\x19\n" +
	"\x15PAIRED_KEY_ENCRYPTION\x10\a\"\xdd\x05\n" +
	"\x16ConnectionRequestFrame\x12\x1f\n" +
	"\vendpoint_id\x18\x01 \x01(\tR\n" +
	"endpointId\x12#\n" +
	"\rendpoint_name\x18\x02 \x01(\fR\fendpointName\x12%\n" +
	"\x0ehandshake_data\x18\x03 \x01(\fR\rhandshakeData\x12\x14\n" +
	"\x05nonce\x18\x04 \x01(\x05R\x05nonce\x12T\n" +
	"\amediums\x18\x05 \x03(\x0e2:.location.nearby.connections.ConnectionRequestFrame.MediumR\amediums\x12#\n" +
	"\rendpoint_info\x18\x06 \x01(\fR\fendpointInfo\x12T\n" +
	"\x0fmedium_metadata\x18\a \x01(\v2+.location.nearby.connections.MediumMetadataR\x0emediumMetadata\x12;\n" +
	"\x1akeep_alive_interval_millis\x18\b \x01(\x05R\x17keepAliveIntervalMillis\x129\n" +
	"\x19keep_alive_timeout_millis\x18\t \x01(\x05R\x16keepAliveTimeoutMillis\x12\"\n" +
	"\vdevice_type\x18\n" +
	" \x01(\x05:\x010R\n" +
	"deviceType\x12\x1f\n" +
	"\vdevice_info\x18\v \x01(\fR\n" +
	"deviceInfo\"\xb1\x01\n" +
	"\x06Medium\x12\x12\n" +
	"\x0eUNKNOWN_MEDIUM\x10\x00\x12\f\n" +
	"\x04MDNS\x10\x01\x1a\x02\b\x01\x12\r\n" +
	"\tBLUETOOTH\x10\x02\x12\x10\n" +
	"\fWIFI_HOTSPOT\x10\x03\x12\a\n" +
	"\x03BLE\x10\x04\x12\f\n" +
	"\bWIFI_LAN\x10\x05\x12\x0e\n" +
	"\n" +
	"WIFI_AWARE\x10\x06\x12\a\n" +
	"\x03NFC\x10\a\x12\x0f\n" +
	"\vWIFI_DIRECT\x10\b\x12\v\n" +
	"\aWEB_RTC\x10\t\x12\r\n" +
	"\tBLE_L2CAP\x10\n" +
	"\x12\a\n" +
	"\x03USB\x10\v\"\xba\x03\n" +
	"\x17ConnectionResponseFrame\x12\x1a\n" +
	"\x06status\x18\x01 \x01(\x05B\x02\x18\x01R\x06status\x12%\n" +
	"\x0ehandshake_data\x18\x02 \x01(\fR\rhandshakeData\x12_\n" +
	"\bresponse\x18\x03 \x01(\x0e2C.location.nearby.connections.ConnectionResponseFrame.ResponseStatusR\bresponse\x12<\n" +
	"\aos_info\x18\x04 \x01(\v2#.location.nearby.connections.OsInfoR\x06osInfo\x128\n" +
	"\x18multiplex_socket_bitmask\x18\x05 \x01(\x05R\x16multiplexSocketBitmask\x12<\n" +
	"\x1anearby_connections_version\x18\x06 \x01(\x05R\x18nearbyConnectionsVersion\"E\n" +
	"\x0eResponseStatus\x12\x1b\n" +
	"\x17UNKNOWN_RESPONSE_STATUS\x10\x00\x12\n" +
	"\n" +
	"\x06ACCEPT\x10\x01\x12\n" +
	"\n" +
	"\x06REJECT\x10\x02\"\x9c\t\n" +
	"\x14PayloadTransferFrame\x12]\n" +
	"\vpacket_type\x18\x01 \x01(\x0e2<.location.nearby.connections.PayloadTransferFrame.PacketTypeR\n" +
	"packetType\x12f\n" +
	"\x0epayload_header\x18\x02 \x01(\v2?.location.nearby.connections.PayloadTransferFrame.PayloadHeaderR\rpayloadHeader\x12c\n" +
	"\rpayload_chunk\x18\x03 \x01(\v2>.location.nearby.connections.PayloadTransferFrame.PayloadChunkR\fpayloadChunk\x12i\n" +
	"\x0fcontrol_message\x18\x04 \x01(\v2@.location.nearby.connections.PayloadTransferFrame.ControlMessageR\x0econtrolMessage\x1a\xce\x02\n" +
	"\rPayloadHeader\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12_\n" +
	"\x04type\x18\x02 \x01(\x0e2K.location.nearby.connections.PayloadTransferFrame.PayloadHeader.PayloadTypeR\x04type\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\x12!\n" +
	"\fis_sensitive\x18\x04 \x01(\bR\visSensitive\x12\x1b\n" +
	"\tfile_name\x18\x05 \x01(\tR\bfileName\x12#\n" +
	"\rparent_folder\x18\x06 \x01(\tR\fparentFolder\"H\n" +
	"\vPayloadType\x12\x18\n" +
	"\x14UNKNOWN_PAYLOAD_TYPE\x10\x00\x12\t\n" +
	"\x05BYTES\x10\x01\x12\b\n" +
	"\x04FILE\x10\x02\x12\n" +
	"\n" +
	"\x06STREAM\x10\x03\x1ai\n" +
	"\fPayloadChunk\x12\x14\n" +
	"\x05flags\x18\x01 \x01(\x05R\x05flags\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\"\x17\n" +
	"\x05Flags\x12\x0e\n" +
	"\n" +
	"LAST_CHUNK\x10\x01\x1a\xf2\x01\n" +
	"\x0eControlMessage\x12`\n" +
	"\x05event\x18\x01 \x01(\x0e2J.location.nearby.connections.PayloadTransferFrame.ControlMessage.EventTypeR\x05event\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\"f\n" +
	"\tEventType\x12\x16\n" +
	"\x12UNKNOWN_EVENT_TYPE\x10\x00\x12\x11\n" +
	"\rPAYLOAD_ERROR\x10\x01\x12\x14\n" +
	"\x10PAYLOAD_CANCELED\x10\x02\x12\x18\n" +
	"\x14PAYLOAD_RECEIVED_ACK\x10\x03\"<\n" +
	"\n" +
	"PacketType\x12\x17\n" +
	"\x13UNKNOWN_PACKET_TYPE\x10\x00\x12\b\n" +
	"\x04DATA\x10\x01\x12\v\n" +
	"\aCONTROL\x10\x02\"\x9a\x17\n" +
	" BandwidthUpgradeNegotiationFrame\x12f\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e2G.location.nearby.connections.BandwidthUpgradeNegotiationFrame.EventTypeR\teventType\x12y\n" +
	"\x11upgrade_path_info\x18\x02 \x01(\v2M.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfoR\x0fupgradePathInfo\x12\x81\x01\n" +
	"\x13client_introduction\x18\x03 \x01(\v2P.location.nearby.connections.BandwidthUpgradeNegotiationFrame.ClientIntroductionR\x12clientIntroduction\x12\x8b\x01\n" +
	"\x17client_introduction_ack\x18\x04 \x01(\v2S.location.nearby.connections.BandwidthUpgradeNegotiationFrame.ClientIntroductionAckR\x15clientIntroductionAck\x1a\x9d\x10\n" +
	"\x0fUpgradePathInfo\x12l\n" +
	"\x06medium\x18\x01 \x01(\x0e2T.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.MediumR\x06medium\x12\x9e\x01\n" +
	"\x18wifi_hotspot_credentials\x18\x02 \x01(\v2d.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiHotspotCredentialsR\x16wifiHotspotCredentials\x12\x83\x01\n" +
	"\x0fwifi_lan_socket\x18\x03 \x01(\v2[.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiLanSocketR\rwifiLanSocket\x12\x97\x01\n" +
	"\x15bluetooth_credentials\x18\x04 \x01(\v2b.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.BluetoothCredentialsR\x14bluetoothCredentials\x12\x98\x01\n" +
	"\x16wifi_aware_credentials\x18\x05 \x01(\v2b.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiAwareCredentialsR\x14wifiAwareCredentials\x12\x9b\x01\n" +
	"\x17wifi_direct_credentials\x18\x06 \x01(\v2c.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiDirectCredentialsR\x15wifiDirectCredentials\x12\x8f\x01\n" +
	"\x13web_rtc_credentials\x18\b \x01(\v2_.location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WebRtcCredentialsR\x11webRtcCredentials\x12B\n" +
	"\x1dsupports_disabling_encryption\x18\a \x01(\bR\x1bsupportsDisablingEncryption\x12G\n" +
	" supports_client_introduction_ack\x18\t \x01(\bR\x1dsupportsClientIntroductionAck\x1a\xa1\x01\n" +
	"\x16WifiHotspotCredentials\x12\x12\n" +
	"\x04ssid\x18\x01 \x01(\tR\x04ssid\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12!\n" +
	"\agateway\x18\x04 \x01(\t:\a0.0.0.0R\agateway\x12 \n" +
	"\tfrequency\x18\x05 \x01(\x05:\x02-1R\tfrequency\x1aK\n" +
	"\rWifiLanSocket\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x01 \x01(\fR\tipAddress\x12\x1b\n" +
	"\twifi_port\x18\x02 \x01(\x05R\bwifiPort\x1aZ\n" +
	"\x14BluetoothCredentials\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1f\n" +
	"\vmac_address\x18\x02 \x01(\tR\n" +
	"macAddress\x1at\n" +
	"\x14WifiAwareCredentials\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12!\n" +
	"\fservice_info\x18\x02 \x01(\fR\vserviceInfo\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x1a\x9c\x01\n" +
	"\x15WifiDirectCredentials\x12\x12\n" +
	"\x04ssid\x18\x01 \x01(\tR\x04ssid\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12\x1c\n" +
	"\tfrequency\x18\x04 \x01(\x05R\tfrequency\x12!\n" +
	"\agateway\x18\x05 \x01(\t:\a0.0.0.0R\agateway\x1a|\n" +
	"\x11WebRtcCredentials\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12N\n" +
	"\rlocation_hint\x18\x02 \x01(\v2).location.nearby.connections.LocationHintR\flocationHint\"\xa2\x01\n" +
	"\x06Medium\x12\x12\n" +
	"\x0eUNKNOWN_MEDIUM\x10\x00\x12\f\n" +
	"\x04MDNS\x10\x01\x1a\x02\b\x01\x12\r\n" +
	"\tBLUETOOTH\x10\x02\x12\x10\n" +
	"\fWIFI_HOTSPOT\x10\x03\x12\a\n" +
	"\x03BLE\x10\x04\x12\f\n" +
	"\bWIFI_LAN\x10\x05\x12\x0e\n" +
	"\n" +
	"WIFI_AWARE\x10\x06\x12\a\n" +
	"\x03NFC\x10\a\x12\x0f\n" +
	"\vWIFI_DIRECT\x10\b\x12\v\n" +
	"\aWEB_RTC\x10\t\x12\a\n" +
	"\x03USB\x10\v\x1ay\n" +
	"\x12ClientIntroduction\x12\x1f\n" +
	"\vendpoint_id\x18\x01 \x01(\tR\n" +
	"endpointId\x12B\n" +
	"\x1dsupports_disabling_encryption\x18\x02 \x01(\bR\x1bsupportsDisablingEncryption\x1a\x17\n" +
	"\x15ClientIntroductionAck\"\xcc\x01\n" +
	"\tEventType\x12\x16\n" +
	"\x12UNKNOWN_EVENT_TYPE\x10\x00\x12\x1a\n" +
	"\x16UPGRADE_PATH_AVAILABLE\x10\x01\x12\x1f\n" +
	"\x1bLAST_WRITE_TO_PRIOR_CHANNEL\x10\x02\x12\x1f\n" +
	"\x1bSAFE_TO_CLOSE_PRIOR_CHANNEL\x10\x03\x12\x17\n" +
	"\x13CLIENT_INTRODUCTION\x10\x04\x12\x13\n" +
	"\x0fUPGRADE_FAILURE\x10\x05\x12\x1b\n" +
	"\x17CLIENT_INTRODUCTION_ACK\x10\x06\"\"\n" +
	"\x0eKeepAliveFrame\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\bR\x03ack\"\x86\x01\n" +
	"\x12DisconnectionFrame\x12;\n" +
	"\x1arequest_safe_to_disconnect\x18\x01 \x01(\bR\x17requestSafeToDisconnect\x123\n" +
	"\x16ack_safe_to_disconnect\x18\x02 \x01(\bR\x13ackSafeToDisconnect\";\n" +
	"\x18PairedKeyEncryptionFrame\x12\x1f\n" +
	"\vsigned_data\x18\x01 \x01(\fR\n" +
	"signedData\"\x9e\x06\n" +
	"\x0eMediumMetadata\x12$\n" +
	"\x0esupports_5_ghz\x18\x01 \x01(\bR\fsupports5Ghz\x12\x14\n" +
	"\x05bssid\x18\x02 \x01(\tR\x05bssid\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\fR\tipAddress\x12$\n" +
	"\x0esupports_6_ghz\x18\x04 \x01(\bR\fsupports6Ghz\x12!\n" +
	"\fmobile_radio\x18\x05 \x01(\bR\vmobileRadio\x12%\n" +
	"\fap_frequency\x18\x06 \x01(\x05:\x02-1R\vapFrequency\x12]\n" +
	"\x12available_channels\x18\a \x01(\v2..location.nearby.connections.AvailableChannelsR\x11availableChannels\x12~\n" +
	"\x1fwifi_direct_cli_usable_channels\x18\b \x01(\v28.location.nearby.connections.WifiDirectCliUsableChannelsR\x1bwifiDirectCliUsableChannels\x12k\n" +
	"\x18wifi_lan_usable_channels\x18\t \x01(\v22.location.nearby.connections.WifiLanUsableChannelsR\x15wifiLanUsableChannels\x12q\n" +
	"\x1awifi_aware_usable_channels\x18\n" +
	" \x01(\v24.location.nearby.connections.WifiAwareUsableChannelsR\x17wifiAwareUsableChannels\x12\x81\x01\n" +
	" wifi_hotspot_sta_usable_channels\x18\v \x01(\v29.location.nearby.connections.WifiHotspotStaUsableChannelsR\x1cwifiHotspotStaUsableChannels\"3\n" +
	"\x11AvailableChannels\x12\x1e\n" +
	"\bchannels\x18\x01 \x03(\x05B\x02\x10\x01R\bchannels\"=\n" +
	"\x1bWifiDirectCliUsableChannels\x12\x1e\n" +
	"\bchannels\x18\x01 \x03(\x05B\x02\x10\x01R\bchannels\"7\n" +
	"\x15WifiLanUsableChannels\x12\x1e\n" +
	"\bchannels\x18\x01 \x03(\x05B\x02\x10\x01R\bchannels\"9\n" +
	"\x17WifiAwareUsableChannels\x12\x1e\n" +
	"\bchannels\x18\x01 \x03(\x05B\x02\x10\x01R\bchannels\">\n" +
	"\x1cWifiHotspotStaUsableChannels\x12\x1e\n" +
	"\bchannels\x18\x01 \x03(\x05B\x02\x10\x01R\bchannels\"x\n" +
	"\fLocationHint\x12\x1a\n" +
	"\blocation\x18\x01 \x01(\tR\blocation\x12L\n" +
	"\x06format\x18\x02 \x01(\x0e24.location.nearby.connections.LocationStandard.FormatR\x06format\"S\n" +
	"\x10LocationStandard\"?\n" +
	"\x06Format\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x10\n" +
	"\fE164_CALLING\x10\x01\x12\x16\n" +
	"\x12ISO_3166_1_ALPHA_2\x10\x02\"\xa6\x01\n" +
	"\x06OsInfo\x12>\n" +
	"\x04type\x18\x01 \x01(\x0e2*.location.nearby.connections.OsInfo.OsTypeR\x04type\"\\\n" +
	"\x06OsType\x12\x13\n" +
	"\x0fUNKNOWN_OS_TYPE\x10\x00\x12\v\n" +
	"\aANDROID\x10\x01\x12\r\n" +
	"\tCHROME_OS\x10\x02\x12\v\n" +
	"\aWINDOWS\x10\x03\x12\t\n" +
	"\x05APPLE\x10\x04\x12\t\n" +
	"\x05LINUX\x10dB\x8b\x01\n" +
	",com.google.location.nearby.connections.protoB\x17OfflineWireFormatsProtoH\x03Z9github.com/ACLzz/qshare/internal/protobuf/gen/connections\xa2\x02\x04GNCP"

var (
	file_offline_wire_formats_proto_rawDescOnce sync.Once
	file_offline_wire_formats_proto_rawDescData []byte
)

func file_offline_wire_formats_proto_rawDescGZIP() []byte {
	file_offline_wire_formats_proto_rawDescOnce.Do(func() {
		file_offline_wire_formats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_offline_wire_formats_proto_rawDesc), len(file_offline_wire_formats_proto_rawDesc)))
	})
	return file_offline_wire_formats_proto_rawDescData
}

var file_offline_wire_formats_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_offline_wire_formats_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_offline_wire_formats_proto_goTypes = []any{
	(OfflineFrame_Version)(0),                                                       // 0: location.nearby.connections.OfflineFrame.Version
	(V1Frame_FrameType)(0),                                                          // 1: location.nearby.connections.V1Frame.FrameType
	(ConnectionRequestFrame_Medium)(0),                                              // 2: location.nearby.connections.ConnectionRequestFrame.Medium
	(ConnectionResponseFrame_ResponseStatus)(0),                                     // 3: location.nearby.connections.ConnectionResponseFrame.ResponseStatus
	(PayloadTransferFrame_PacketType)(0),                                            // 4: location.nearby.connections.PayloadTransferFrame.PacketType
	(PayloadTransferFrame_PayloadHeader_PayloadType)(0),                             // 5: location.nearby.connections.PayloadTransferFrame.PayloadHeader.PayloadType
	(PayloadTransferFrame_PayloadChunk_Flags)(0),                                    // 6: location.nearby.connections.PayloadTransferFrame.PayloadChunk.Flags
	(PayloadTransferFrame_ControlMessage_EventType)(0),                              // 7: location.nearby.connections.PayloadTransferFrame.ControlMessage.EventType
	(BandwidthUpgradeNegotiationFrame_EventType)(0),                                 // 8: location.nearby.connections.BandwidthUpgradeNegotiationFrame.EventType
	(BandwidthUpgradeNegotiationFrame_UpgradePathInfo_Medium)(0),                    // 9: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.Medium
	(LocationStandard_Format)(0),                                                    // 10: location.nearby.connections.LocationStandard.Format
	(OsInfo_OsType)(0),                                                              // 11: location.nearby.connections.OsInfo.OsType
	(*OfflineFrame)(nil),                                                            // 12: location.nearby.connections.OfflineFrame
	(*V1Frame)(nil),                                                                 // 13: location.nearby.connections.V1Frame
	(*ConnectionRequestFrame)(nil),                                                  // 14: location.nearby.connections.ConnectionRequestFrame
	(*ConnectionResponseFrame)(nil),                                                 // 15: location.nearby.connections.ConnectionResponseFrame
	(*PayloadTransferFrame)(nil),                                                    // 16: location.nearby.connections.PayloadTransferFrame
	(*BandwidthUpgradeNegotiationFrame)(nil),                                        // 17: location.nearby.connections.BandwidthUpgradeNegotiationFrame
	(*KeepAliveFrame)(nil),                                                          // 18: location.nearby.connections.KeepAliveFrame
	(*DisconnectionFrame)(nil),                                                      // 19: location.nearby.connections.DisconnectionFrame
	(*PairedKeyEncryptionFrame)(nil),                                                // 20: location.nearby.connections.PairedKeyEncryptionFrame
	(*MediumMetadata)(nil),                                                          // 21: location.nearby.connections.MediumMetadata
	(*AvailableChannels)(nil),                                                       // 22: location.nearby.connections.AvailableChannels
	(*WifiDirectCliUsableChannels)(nil),                                             // 23: location.nearby.connections.WifiDirectCliUsableChannels
	(*WifiLanUsableChannels)(nil),                                                   // 24: location.nearby.connections.WifiLanUsableChannels
	(*WifiAwareUsableChannels)(nil),                                                 // 25: location.nearby.connections.WifiAwareUsableChannels
	(*WifiHotspotStaUsableChannels)(nil),                                            // 26: location.nearby.connections.WifiHotspotStaUsableChannels
	(*LocationHint)(nil),                                                            // 27: location.nearby.connections.LocationHint
	(*LocationStandard)(nil),                                                        // 28: location.nearby.connections.LocationStandard
	(*OsInfo)(nil),                                                                  // 29: location.nearby.connections.OsInfo
	(*PayloadTransferFrame_PayloadHeader)(nil),                                      // 30: location.nearby.connections.PayloadTransferFrame.PayloadHeader
	(*PayloadTransferFrame_PayloadChunk)(nil),                                       // 31: location.nearby.connections.PayloadTransferFrame.PayloadChunk
	(*PayloadTransferFrame_ControlMessage)(nil),                                     // 32: location.nearby.connections.PayloadTransferFrame.ControlMessage
	(*BandwidthUpgradeNegotiationFrame_UpgradePathInfo)(nil),                        // 33: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo
	(*BandwidthUpgradeNegotiationFrame_ClientIntroduction)(nil),                     // 34: location.nearby.connections.BandwidthUpgradeNegotiationFrame.ClientIntroduction
	(*BandwidthUpgradeNegotiationFrame_ClientIntroductionAck)(nil),                  // 35: location.nearby.connections.BandwidthUpgradeNegotiationFrame.ClientIntroductionAck
	(*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiHotspotCredentials)(nil), // 36: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiHotspotCredentials
	(*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiLanSocket)(nil),          // 37: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiLanSocket
	(*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_BluetoothCredentials)(nil),   // 38: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.BluetoothCredentials
	(*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiAwareCredentials)(nil),   // 39: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiAwareCredentials
	(*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WifiDirectCredentials)(nil),  // 40: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiDirectCredentials
	(*BandwidthUpgradeNegotiationFrame_UpgradePathInfo_WebRtcCredentials)(nil),      // 41: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WebRtcCredentials
}
var file_offline_wire_formats_proto_depIdxs = []int32{
	0,  // 0: location.nearby.connections.OfflineFrame.version:type_name -> location.nearby.connections.OfflineFrame.Version
	13, // 1: location.nearby.connections.OfflineFrame.v1:type_name -> location.nearby.connections.V1Frame
	1,  // 2: location.nearby.connections.V1Frame.type:type_name -> location.nearby.connections.V1Frame.FrameType
	14, // 3: location.nearby.connections.V1Frame.connection_request:type_name -> location.nearby.connections.ConnectionRequestFrame
	15, // 4: location.nearby.connections.V1Frame.connection_response:type_name -> location.nearby.connections.ConnectionResponseFrame
	16, // 5: location.nearby.connections.V1Frame.payload_transfer:type_name -> location.nearby.connections.PayloadTransferFrame
	17, // 6: location.nearby.connections.V1Frame.bandwidth_upgrade_negotiation:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame
	18, // 7: location.nearby.connections.V1Frame.keep_alive:type_name -> location.nearby.connections.KeepAliveFrame
	19, // 8: location.nearby.connections.V1Frame.disconnection:type_name -> location.nearby.connections.DisconnectionFrame
	20, // 9: location.nearby.connections.V1Frame.paired_key_encryption:type_name -> location.nearby.connections.PairedKeyEncryptionFrame
	2,  // 10: location.nearby.connections.ConnectionRequestFrame.mediums:type_name -> location.nearby.connections.ConnectionRequestFrame.Medium
	21, // 11: location.nearby.connections.ConnectionRequestFrame.medium_metadata:type_name -> location.nearby.connections.MediumMetadata
	3,  // 12: location.nearby.connections.ConnectionResponseFrame.response:type_name -> location.nearby.connections.ConnectionResponseFrame.ResponseStatus
	29, // 13: location.nearby.connections.ConnectionResponseFrame.os_info:type_name -> location.nearby.connections.OsInfo
	4,  // 14: location.nearby.connections.PayloadTransferFrame.packet_type:type_name -> location.nearby.connections.PayloadTransferFrame.PacketType
	30, // 15: location.nearby.connections.PayloadTransferFrame.payload_header:type_name -> location.nearby.connections.PayloadTransferFrame.PayloadHeader
	31, // 16: location.nearby.connections.PayloadTransferFrame.payload_chunk:type_name -> location.nearby.connections.PayloadTransferFrame.PayloadChunk
	32, // 17: location.nearby.connections.PayloadTransferFrame.control_message:type_name -> location.nearby.connections.PayloadTransferFrame.ControlMessage
	8,  // 18: location.nearby.connections.BandwidthUpgradeNegotiationFrame.event_type:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.EventType
	33, // 19: location.nearby.connections.BandwidthUpgradeNegotiationFrame.upgrade_path_info:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo
	34, // 20: location.nearby.connections.BandwidthUpgradeNegotiationFrame.client_introduction:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.ClientIntroduction
	35, // 21: location.nearby.connections.BandwidthUpgradeNegotiationFrame.client_introduction_ack:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.ClientIntroductionAck
	22, // 22: location.nearby.connections.MediumMetadata.available_channels:type_name -> location.nearby.connections.AvailableChannels
	23, // 23: location.nearby.connections.MediumMetadata.wifi_direct_cli_usable_channels:type_name -> location.nearby.connections.WifiDirectCliUsableChannels
	24, // 24: location.nearby.connections.MediumMetadata.wifi_lan_usable_channels:type_name -> location.nearby.connections.WifiLanUsableChannels
	25, // 25: location.nearby.connections.MediumMetadata.wifi_aware_usable_channels:type_name -> location.nearby.connections.WifiAwareUsableChannels
	26, // 26: location.nearby.connections.MediumMetadata.wifi_hotspot_sta_usable_channels:type_name -> location.nearby.connections.WifiHotspotStaUsableChannels
	10, // 27: location.nearby.connections.LocationHint.format:type_name -> location.nearby.connections.LocationStandard.Format
	11, // 28: location.nearby.connections.OsInfo.type:type_name -> location.nearby.connections.OsInfo.OsType
	5,  // 29: location.nearby.connections.PayloadTransferFrame.PayloadHeader.type:type_name -> location.nearby.connections.PayloadTransferFrame.PayloadHeader.PayloadType
	7,  // 30: location.nearby.connections.PayloadTransferFrame.ControlMessage.event:type_name -> location.nearby.connections.PayloadTransferFrame.ControlMessage.EventType
	9,  // 31: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.medium:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.Medium
	36, // 32: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.wifi_hotspot_credentials:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiHotspotCredentials
	37, // 33: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.wifi_lan_socket:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiLanSocket
	38, // 34: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.bluetooth_credentials:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.BluetoothCredentials
	39, // 35: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.wifi_aware_credentials:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiAwareCredentials
	40, // 36: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.wifi_direct_credentials:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WifiDirectCredentials
	41, // 37: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.web_rtc_credentials:type_name -> location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WebRtcCredentials
	27, // 38: location.nearby.connections.BandwidthUpgradeNegotiationFrame.UpgradePathInfo.WebRtcCredentials.location_hint:type_name -> location.nearby.connections.LocationHint
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_offline_wire_formats_proto_init() }
func file_offline_wire_formats_proto_init() {
	if File_offline_wire_formats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_offline_wire_formats_proto_rawDesc), len(file_offline_wire_formats_proto_rawDesc)),
			NumEnums:      12,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_offline_wire_formats_proto_goTypes,
		DependencyIndexes: file_offline_wire_formats_proto_depIdxs,
		EnumInfos:         file_offline_wire_formats_proto_enumTypes,
		MessageInfos:      file_offline_wire_formats_proto_msgTypes,
	}.Build()
	File_offline_wire_formats_proto = out.File
	file_offline_wire_formats_proto_goTypes = nil
	file_offline_wire_formats_proto_depIdxs = nil
}
